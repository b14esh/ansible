---
- hosts: all
  become: yes
  vars:
     mysql_root_password: "password"
     destin_file_cnf: /root/.my.cnf
     source_file_cnf: ./.my.cnf
     rd_user: "rd"
     rd_password: "rd"
     rd_db: "rd"
     rd_host: "localhost"
     rd_priv: "{{ rd_db }}.*:ALL"

  tasks:
  - name: Cheack and Print Linux Version
    debug: var=ansible_os_family

  - name: Add config nginx.service 
    template:
       src: ./default.conf.j2
       dest: /etc/nginx/sites-enabled/default
    notify: Restart nginx.service  

  - name: Add config mariadb.service disable strict mode
    template:
       src: ./disable_strict_mode.cnf.j2
       dest: /etc/mysql/conf.d/disable_strict_mode.cnf
    notify: Restart mariadb.service 

  - name: Install a list of packages
    apt:
      pkg:
        - nginx
        - php-fpm
        - mariadb-server
        - php-mysql
        - php-cli
        - php-gd
        - php-curl
        - php-xml
        - php-mbstring
        - php-intl
        - git
        - wget
        - python3-apt
        - python3 
        - python3-pip 
        - python3-setuptools
        - python3-pymysql
      state: latest
      update_cache: True
    when: ansible_os_family == "Debian"

  - name: Read-write git checkout from github
    ansible.builtin.git:
      repo: https://github.com/RADIUSdesk/rdcore.git
      dest: /var/www/rdcore
      update: no


  - name: Create a symbolic link rd
    ansible.builtin.file:
      src: /var/www//rdcore/rd
      dest: /var/www/html/rd
      owner: www-data
      group: www-data
      state: link
    

  - name: Create a symbolic link cake4
    ansible.builtin.file:
      src: /var/www//rdcore/cake4
      dest: /var/www/html/cake4
      owner: www-data
      group: www-data
      state: link

  - name: Create a symbolic link login
    ansible.builtin.file:
      src: /var/www//rdcore/login
      dest: /var/www/html/login
      owner: www-data
      group: www-data
      state: link

  - name: Create a symbolic link conf_dev
    ansible.builtin.file:
      src: /var/www//rdcore/AmpConf/build/production/AmpConf
      dest: /var/www/html/conf_dev
      owner: www-data
      group: www-data
      state: link

  - name: Create a symbolic link AmpConf
    ansible.builtin.file:
      src: /var/www//rdcore/login/rd_client/build/production/AmpConf
      dest: /var/www/html/usage
      owner: www-data
      group: www-data
      state: link

  - name: Create a symbolic link reporting
    ansible.builtin.file:
      src: /var/www//rdcore/cake4/rd_cake/setup/scripts/reporting
      dest: /var/www/html/reporting
      owner: www-data
      group: www-data
      state: link

  - name: Create a directory logs it does not exist
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/logs
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
      mode: '0755'
    

  - name: Create a directory imagecache it does not exist
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/webroot/files/imagecache
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
      mode: '0755'

  - name: Create a directory tmp it does not exist
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/tmp
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
      mode: '0755'

  - name: Give insecure permissions tmp to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/tmp
      owner: www-data
      group: www-data

  - name: Give insecure permissions tmp to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/tmp
      owner: www-data
      group: www-data
      recurse: yes

  - name: Give insecure permissions to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/logs
      owner: www-data
      group: www-data
      recurse: yes

  - name: Give insecure permissions to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/webroot/img/realms
      owner: www-data
      group: www-data
      recurse: yes

  - name: Give insecure permissions to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/webroot/img/dynamic_details
      owner: www-data
      group: www-data
      recurse: yes

  - name: Give insecure permissions to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/webroot/img/dynamic_photos
      owner: www-data
      group: www-data
      recurse: yes

  - name: Give insecure permissions to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/webroot/img/access_providers
      owner: www-data
      group: www-data
      recurse: yes

  - name: Give insecure permissions to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/webroot/img/hardwares
      owner: www-data
      group: www-data
      recurse: yes

  - name: Give insecure permissions to an existing file
    ansible.builtin.file:
      path: /var/www/html/cake4/rd_cake/webroot/files/imagecache
      owner: www-data
      group: www-data
      recurse: yes

  - name: Copy file cnf to Servers
    copy: src={{ source_file_cnf }} dest={{ destin_file_cnf }} mode=0600 owner=root group=root backup=yes 

  - name: Edit line password
    lineinfile:
      path: /root/.my.cnf
      state: present
      regexp: '^password='
      line: 'password="{{ mysql_root_password }}"'


  - name: Remove the test database
    mysql_db:
      login_unix_socket: /var/run/mysqld/mysqld.sock
      name: test
      state: absent

  - name: Remove anonymous user
    mysql_user:
      login_unix_socket: /var/run/mysqld/mysqld.sock
      name: ''
      state: absent
  
  - name: Sets the root password 
    mysql_user:
       login_unix_socket: /var/run/mysqld/mysqld.sock
       user: root 
       password: "{{ mysql_root_password }}" 
       host: localhost  

  - name: "Create new databases with names {{ rd_user }}"
    mysql_db:
      login_unix_socket: /var/run/mysqld/mysqld.sock
      name: "{{ rd_user }}"
      encoding: utf8
      collation: utf8_bin
      state: present
  
  - name: "Add user and add  privilege for {{ rd_db }}"
    mysql_user:
      login_unix_socket: /var/run/mysqld/mysqld.sock
      login_host: "localhost"
      name: "{{ rd_db }}"
      password: "{{ rd_password }}"
      host: "localhost"
      priv: "{{ rd_priv }}"
      state: present
      append_privs: yes

  - name: Importing databases
    mysql_db:
      name: "{{ rd_db }}"
      login_user: "{{ rd_user }}"
      login_host: localhost
      login_password: "{{ rd_password }}"
      config_file: no
      state: import
      encoding: utf8
      collation: utf8_bin
      target: "/var/www/html/cake4/rd_cake/setup/db/rd.sql"

#  - name: Edit line db_password for rd
#    lineinfile:
#      path: /etc/????????..zxc
#      state: present
#      regexp: '^DBPassword='
#      line: 'DBPassword={{ rd_password }}'


  handlers:
  - name: Restart nginx.service 
    service: name=nginx.service  state=restarted
  - name: Restart mariadb.service
    service: name=mariadb.service state=restarted
    